name: Actions

on:
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - asteroid.best
        unityVersion:
          - 2019.3.7f1
        targetPlatform:
          - WebGL # WebGL.
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          lfs: true
          
      # Cache
      - uses: actions/cache@v1.1.2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      # # Test
      # - uses: webbertakken/unity-test-runner@v1.6
      #   id: testRunner
      #   with:
      #     projectPath: ${{ matrix.projectPath }}
      #     unityVersion: ${{ matrix.unityVersion }}
      
      # # Upload Test results
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: Test results (all modes)
      #     path: ${{ steps.testRunner.outputs.artifactsPath }}

      # Build
      - uses: webbertakken/unity-builder@v0.12
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output 
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build

      # GH pages
      - uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GITHUB_PAT }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.